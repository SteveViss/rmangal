}
}
rm(taxon)
names(taxons_df) <- c("name")
# Set WD
setwd("C:/Users/Dell_Gabriel/Desktop/StageGravel/importation_mangal/Silva_De_Marco_Hasui_Gomes_2002")
## Get Unique taxon of data
taxon <- c(as.vector(unique(Silva_De_Marco_Hasui_Gomes_2002$sp_taxon_2)), as.vector(unique(Silva_De_Marco_Hasui_Gomes_2002$sp_taxon_1)))
taxo_back <- vector()
for (i in 1:length(taxon)) {
if(str_detect(taxon[i], "[123456789._]") == TRUE){
taxo_back[i] <- word(taxon[i], start = 1)
} else {
taxo_back[i] <- taxon[i]
}
}
taxo_back <- unique(taxo_back)
server <- "http://localhost:3000"
taxo_back_df <- data.frame()
for (i in 1:length(taxo_back)) {
path <- modify_url(server, path = paste0("/api/v0/","taxo_backs/?name=", str_replace(taxo_back[i], " ", "%20")))
if (length(content(GET(url = path, config = add_headers("Content-type" = "application/json")))) == 0) {
taxo_back_df[nrow(taxo_back_df)+1, 1] <- taxo_back[i]
}
}
rm(taxo_back)
names(taxo_back_df) <- c("name")
## Get code by species
taxo_back_df[, "bold"] <- NA
taxo_back_df[, "eol"]  <- NA
taxo_back_df[, "tsn"]  <- NA
taxo_back_df[, "ncbi"] <- NA
for (i in 1:nrow(taxo_back_df)) {
try (expr = (taxo_back_df[i, 2] <- get_boldid(taxo_back_df[i, 1], row = 5, verbose = FALSE)[1]), silent = TRUE)
try (expr = (taxo_back_df[i, 3] <- get_eolid(taxo_back_df[i, 1], row = 5, verbose = FALSE, key = 110258)[1]), silent = TRUE)
try (expr = (taxo_back_df[i, 4] <- get_tsn(taxo_back_df[i, 1], row = 5, verbose = FALSE, accepted = TRUE)[1]), silent = TRUE)
try (expr = (taxo_back_df[i, 5] <- get_uid(taxo_back_df[i, 1], row = 5, verbose = FALSE)[1]), silent = TRUE)
}
for (i in 1:nrow(taxo_back_df)) {
try (expr = (taxo_back_df[i, 2] <- get_boldid(taxo_back_df[i, 1], row = 5, verbose = FALSE)[1]), silent = TRUE)
try (expr = (taxo_back_df[i, 3] <- get_eolid(taxo_back_df[i, 1], row = 5, verbose = FALSE, key = 110258)[1]), silent = TRUE)
try (expr = (taxo_back_df[i, 4] <- get_tsn(taxo_back_df[i, 1], row = 5, verbose = FALSE, accepted = TRUE)[1]), silent = TRUE)
try (expr = (taxo_back_df[i, 5] <- get_uid(taxo_back_df[i, 1], row = 5, verbose = FALSE)[1]), silent = TRUE)
}
taxons_df <- data.frame(taxon, NA)
names(taxons_df) <- c("original_name", "name_clear")
for (i in 1:nrow(taxons_df)) {
if(str_detect(taxons_df[i,1], "[123456789._]") == TRUE){
taxons_df[i, 2] <- word(taxons_df[i, 1], start = 1)
} else {
taxons_df[i, 2] <- as.character(taxons_df[i, 1])
}
}
View(taxons_df)
View(taxo_back_df)
write.csv2(x = taxo_back_df, file = paste0(getwd(), "/data/Silva_De_Marco_Hasui_Gomes_2002_taxo_back.csv"), row.names = FALSE)
write.csv2(x = taxons_df, file = paste0(getwd(), "/data/Silva_De_Marco_Hasui_Gomes_2002_taxons.csv"), row.names = FALSE)
write.csv2(x = Silva_De_Marco_Hasui_Gomes_2002, file = paste0(getwd(), "/data/Silva_De_Marco_Hasui_Gomes_2002_inter.csv"), row.names = FALSE)
#------------------------------
# Throwing injection functions
#------------------------------
POST_attributes(attr_inter)
# POST_attributes(attr1)
# POST_attributes(attr2)
POST_refs()
POST_users()
# POST_environments()
POST_datasets()
POST_networks()
POST_taxo_back()
POST_taxons()
# POST_traits(traits_df)
POST_interactions(Silva_De_Marco_Hasui_Gomes_2002)
inter_df <- Silva_De_Marco_Hasui_Gomes_2002
# Retrive foreign keys
## taxon_1 & taxon_2
inter_df[, "taxon_1"] <- NA
inter_df[, "taxon_2"] <- NA
View(inter_df)
for (i in 1:nrow(inter_df)) {
try(inter_df[i, "taxon_1"] <- GET_fkey("taxons", "original_name", as.character(inter_df[i,1])))
try(inter_df[i, "taxon_2"] <- GET_fkey("taxons", "original_name", as.character(inter_df[i,2])))
}
server <- "http://localhost:3000"
config <- httr::add_headers("Content-type" = "application/json")
if (length(content(httr::GET(url = gsub(" ", "%20", paste0(server, "/api/v0/attributes/?name=", attr_inter[[1]])), config = config))) != 0){
inter_df[, "attr_id"] <- GET_fkey("attributes", "name", attr_inter[[1]])
}
if (length(content(httr::GET(url = gsub(" ", "%20", paste0(server, "/api/v0/environments/?name=", enviro[[1]])), config = config))) != 0){
inter_df[, "environment_id"] <- GET_fkey("environments", "name", enviro[[1]])
}
if (length(content(httr::GET(url = gsub(" ", "%20", paste0(server, "/api/v0/refs/?doi=", refs[[1]])), config = config))) != 0){
inter_df[, "ref_id"]         <- GET_fkey("refs", "doi", refs[[1]])
}
if (length(content(httr::GET(url = gsub(" ", "%20", paste0(server, "/api/v0/users/?name=", users[[1]])), config = config))) != 0){
inter_df[, "user_id"]        <- GET_fkey("users", "name", users[[1]])
}
# Remove unused column
inter_df <- inter_df[,3:ncol(inter_df)]
# Add metadata
inter_df <- cbind(data.table::setDT(inter_df),
data.table::setDT(as.data.frame(inter)))
# inter_df as a json list
inter_lst <- json_list(inter_df)
inter_lst[[1]]
inter <- list(taxon_1_level = "taxon",
taxon_2_level = "taxon",
date          = "1111-11-11",
direction     = "directed",
type          = "mutualism",
method        = "Field observation (transect and focal) and fecal analysis",
description   = "Bird feeding on the fruit",
public        = TRUE)
rm(inter_df)
rm(inter_lst)
#' @title POST data in the Mangal interactions table
#'
#' @description GET foreign keys needed for the 'interactions' table then POST
#'    the metadata associated. 'attributes', 'environments', 'networks', 'refs'
#'    and 'users' tables must be POST before.
#'
#' @param inter_df A dataframe with three columns: taxon_1, taxon_2 and value
#'
#' @return
#'
#' The status of the injection:
#' 'interactions done' an id has been created for each interactions and the
#' injection is succesfull
#'
#' @author Gabriel Bergeron
#'
#' @keywords database
#'
#' @importFrom data.table setDT
# Create and inject interactions table ##
POST_interactions <- function(inter_df){
# Retrive foreign keys
## taxon_1 & taxon_2
inter_df[, "taxon_1"] <- NA
inter_df[, "taxon_2"] <- NA
for (i in 1:nrow(inter_df)) {
try(inter_df[i, "taxon_1"] <- GET_fkey("taxons", "original_name", as.character(inter_df[i,1])))
try(inter_df[i, "taxon_2"] <- GET_fkey("taxons", "original_name", as.character(inter_df[i,2])))
}
server <- "http://localhost:3000"
config <- httr::add_headers("Content-type" = "application/json")
if (length(content(httr::GET(url = gsub(" ", "%20", paste0(server, "/api/v0/attributes/?name=", attr_inter[[1]])), config = config))) != 0){
inter_df[, "attr_id"] <- GET_fkey("attributes", "name", attr_inter[[1]])
}
if (length(content(httr::GET(url = gsub(" ", "%20", paste0(server, "/api/v0/environments/?name=", enviro[[1]])), config = config))) != 0){
inter_df[, "environment_id"] <- GET_fkey("environments", "name", enviro[[1]])
}
if (length(content(httr::GET(url = gsub(" ", "%20", paste0(server, "/api/v0/refs/?doi=", refs[[1]])), config = config))) != 0){
inter_df[, "ref_id"]         <- GET_fkey("refs", "doi", refs[[1]])
}
if (length(content(httr::GET(url = gsub(" ", "%20", paste0(server, "/api/v0/users/?name=", users[[1]])), config = config))) != 0){
inter_df[, "user_id"]        <- GET_fkey("users", "name", users[[1]])
}
# Remove unused column
inter_df <- inter_df[,3:ncol(inter_df)]
print("keys added")
# Add metadata
inter_df <- cbind(data.table::setDT(inter_df),
data.table::setDT(as.data.frame(inter)))
print("metadata added")
# inter_df as a json list
inter_lst <- json_list(inter_df)
print("df to list")
# Inject to interactions table
POST_table(inter_lst, "interactions")
rm(inter_lst)
print("interactions done")
}
# POST_traits(traits_df)
POST_interactions(Silva_De_Marco_Hasui_Gomes_2002)
#------------------------------
# Throwing injection functions
#------------------------------
POST_attributes(attr_inter)
# POST_attributes(attr1)
# POST_attributes(attr2)
POST_refs()
POST_users()
# POST_environments()
POST_datasets()
POST_networks()
POST_taxo_back()
POST_taxons()
attr <- list(name        = "Pollinisator recorded on a flower",
table_owner = "interactions",
description = "Presence or absence of interaction",
unit        = "null")
attr1 <- list(name        = "pistil",
table_owner = "traits",
description = "pistil length",
unit        = "cm")
attr2 <- list(name        = "etamine",
table_owner = "traits",
description = "etamine length",
unit        = "cm")
attr4 <- list(name        = "petale",
table_owner = "traits",
description = "petale length",
unit        = "cm")
attr3 <- list(name        = "sepale",
table_owner = "traits",
description = "setale length",
unit        = "cm")
refs <- list(doi   = "0.2307/3565022",
jstor = "null",
pmid  = "null",
url   = "http://www.jstor.org/stable/3565022")
users <- list(name         = "Gabriel Bergeron",
email        = "gabriel.bergeron3@usherbrooke.ca",
orcid        = "null",
organization = "Universite de Sherbrooke",
type         = "administrator")
enviro <- list(name         = "NAME",
localisation = "[81.816667, -71.3, 2029]",
date         = "1111-11-11",
value        = 0)
datasets <- list(name        = "Howking_1968",
date        = "1963-06-01",
description = "Insect activity recorded on flower at Lake Hazen, Ellesmere Island, N.W.T., Canada",
public      = TRUE)
traits <- list(date = "1111-11-11")
networks <- list(name         = "NAME",
date         = "1968-06-01",
#                 localisation = "[81.816667, -71.3, 2029]",
description  = "null",
public       = FALSE)
inter <- list(taxon_1_level = "individual",
taxon_2_level = "individual",
date          = "1968-06-01",
direction     = "directed",
type          = "unknown",
method        = "Field observations",
description   = "Visit of an insect to a flower",
public        = FALSE)
setwd("C:/Users/Dell_Gabriel/Desktop/StageGravel/importation_mangal/Test_Hocking_1968")
taxo_back_df <- read.csv2("data/hocking_1968_taxo_back.csv", header = TRUE)
hocking_1968 <- read.csv2("data/hocking_1968_inter.csv", header = TRUE)
taxons_df <- read.csv2("data/hocking_1968_taxons.csv", header = TRUE)
traits_df <- read.csv2("data/hocking_1968_traits.csv", header = TRUE)
#------------------------------
# Throwing injection functions
#------------------------------
POST_attributes(attr)
POST_attributes(attr1)
POST_attributes(attr2)
POST_attributes(attr3)
POST_attributes(attr4)
POST_refs()
POST_users()
# POST_environments()
POST_datasets()
POST_networks()
POST_taxo_back()
POST_taxons()
POST_traits(traits_df)
POST_interactions(hocking_1968)
attr_inter <- list(name        = "Presence/Absence",
table_owner = "interactions",
description = "Presence or absence of a recorded interaction",
unit        = "null")
refs <- list(doi   = "10.1079/9780851995250.0423",
jstor = "null",
pmid  = "null",
url   = "https://www.researchgate.net/publication/237371343_Patterns_of_Fruit-Frugivore_Interactions_in_Two_Atlantic_Forest_Bird_Communities_of_South-eastern_BrazilImplications_for_Conservation")
users <- list(name         = "Gabriel Bergeron",
email        = "gabriel.bergeron3@usherbrooke.ca",
orcid        = "null",
organization = "Universite de Sherbrooke",
type         = "administrator")
enviro <- list(name         = "NAME",
localisation = "[10, 10, 2029]",
date         = "1111-11-11",
value        = 0)
datasets <- list(name        = "Silva_2002",
date        = "2000-03-01",
description = "Fruit-bird interaction at the Intervales State Park, Brazil",
public      = TRUE)
traits <- list(name        = "NAME",
date        = "1111-11-11",
value       = 0,
description = "null")
networks <- list(name         = "Silva_2002",
date         = "2000-03-01",
# localisation = "[10, 10, 2029]",
description  = "Fruit-bird interaction at the Intervales State Park, Brazil",
public       = TRUE)
inter <- list(taxon_1_level = "taxon",
taxon_2_level = "taxon",
date          = "1111-11-11",
direction     = "directed",
type          = "mutualism",
method        = "Field observation (transect and focal) and fecal analysis",
description   = "Bird feeding on the fruit",
public        = TRUE)
#------------------------------
# Throwing injection functions
#------------------------------
POST_attributes(attr_inter)
# POST_attributes(attr1)
# POST_attributes(attr2)
POST_refs()
POST_users()
# POST_environments()
POST_datasets()
POST_networks()
POST_taxo_back()
POST_taxons()
# POST_traits(traits_df)
POST_interactions(Silva_De_Marco_Hasui_Gomes_2002)
View(Silva_De_Marco_Hasui_Gomes_2002)
View(inter)
refs <- list(doi   = "10.1079/9780851995250.0423",
jstor = "null",
pmid  = "null",
url   = "https://www.researchgate.net/publication/237371343_Patterns_of_Fruit-Frugivore_Interactions_in_Two_Atlantic_Forest_Bird_Communities_of_South-eastern_BrazilImplications_for_Conservation")
inter_df <- Silva_De_Marco_Hasui_Gomes_2002
# Retrive foreign keys
## taxon_1 & taxon_2
inter_df[, "taxon_1"] <- NA
inter_df[, "taxon_2"] <- NA
for (i in 1:nrow(inter_df)) {
try(inter_df[i, "taxon_1"] <- GET_fkey("taxons", "original_name", as.character(inter_df[i,1])))
try(inter_df[i, "taxon_2"] <- GET_fkey("taxons", "original_name", as.character(inter_df[i,2])))
}
View(inter_df)
server <- "http://localhost:3000"
config <- httr::add_headers("Content-type" = "application/json")
if (length(content(httr::GET(url = gsub(" ", "%20", paste0(server, "/api/v0/attributes/?name=", attr_inter[[1]])), config = config))) != 0){
inter_df[, "attr_id"] <- GET_fkey("attributes", "name", attr_inter[[1]])
}
if (length(content(httr::GET(url = gsub(" ", "%20", paste0(server, "/api/v0/environments/?name=", enviro[[1]])), config = config))) != 0){
inter_df[, "environment_id"] <- GET_fkey("environments", "name", enviro[[1]])
}
if (length(content(httr::GET(url = gsub(" ", "%20", paste0(server, "/api/v0/refs/?doi=", refs[[1]])), config = config))) != 0){
inter_df[, "ref_id"]         <- GET_fkey("refs", "doi", refs[[1]])
}
if (length(content(httr::GET(url = gsub(" ", "%20", paste0(server, "/api/v0/users/?name=", users[[1]])), config = config))) != 0){
inter_df[, "user_id"]        <- GET_fkey("users", "name", users[[1]])
}
# Remove unused column
inter_df <- inter_df[,3:ncol(inter_df)]
print("keys added")
# Add metadata
inter_df <- cbind(data.table::setDT(inter_df),
data.table::setDT(as.data.frame(inter)))
print("metadata added")
# inter_df as a json list
inter_lst <- json_list(inter_df)
print("df to list")
# Inject to interactions table
POST_table(inter_lst, "interactions")
inter_lst[[1]]
inter <- list(taxon_1_level = "taxon",
taxon_2_level = "taxon",
date          = "1111-11-11",
direction     = "directed",
type          = "mutualism",
method        = "Field observation/fecal analysis",
description   = "Bird feeding on the fruit",
public        = TRUE)
# Retrive foreign keys
## taxon_1 & taxon_2
inter_df[, "taxon_1"] <- NA
inter_df[, "taxon_2"] <- NA
for (i in 1:nrow(inter_df)) {
try(inter_df[i, "taxon_1"] <- GET_fkey("taxons", "original_name", as.character(inter_df[i,1])))
try(inter_df[i, "taxon_2"] <- GET_fkey("taxons", "original_name", as.character(inter_df[i,2])))
}
inter_df <- Silva_De_Marco_Hasui_Gomes_2002
# Retrive foreign keys
## taxon_1 & taxon_2
inter_df[, "taxon_1"] <- NA
inter_df[, "taxon_2"] <- NA
for (i in 1:nrow(inter_df)) {
try(inter_df[i, "taxon_1"] <- GET_fkey("taxons", "original_name", as.character(inter_df[i,1])))
try(inter_df[i, "taxon_2"] <- GET_fkey("taxons", "original_name", as.character(inter_df[i,2])))
}
server <- "http://localhost:3000"
config <- httr::add_headers("Content-type" = "application/json")
if (length(content(httr::GET(url = gsub(" ", "%20", paste0(server, "/api/v0/attributes/?name=", attr_inter[[1]])), config = config))) != 0){
inter_df[, "attr_id"] <- GET_fkey("attributes", "name", attr_inter[[1]])
}
if (length(content(httr::GET(url = gsub(" ", "%20", paste0(server, "/api/v0/environments/?name=", enviro[[1]])), config = config))) != 0){
inter_df[, "environment_id"] <- GET_fkey("environments", "name", enviro[[1]])
}
if (length(content(httr::GET(url = gsub(" ", "%20", paste0(server, "/api/v0/refs/?doi=", refs[[1]])), config = config))) != 0){
inter_df[, "ref_id"]         <- GET_fkey("refs", "doi", refs[[1]])
}
if (length(content(httr::GET(url = gsub(" ", "%20", paste0(server, "/api/v0/users/?name=", users[[1]])), config = config))) != 0){
inter_df[, "user_id"]        <- GET_fkey("users", "name", users[[1]])
}
# Remove unused column
inter_df <- inter_df[,3:ncol(inter_df)]
print("keys added")
# Add metadata
inter_df <- cbind(data.table::setDT(inter_df),
data.table::setDT(as.data.frame(inter)))
print("metadata added")
# inter_df as a json list
inter_lst <- json_list(inter_df)
inter_lst[[1]]
# Inject to interactions table
POST_table(inter_lst, "interactions")
rm(inter_lst)
print("interactions done")
View(taxo_back_df)
taxo_back_df[1, "name"]
gsub(" ", "%20", paste0("/api/v0/","taxo_backs/?name=",
taxo_back_df[1, "name"]))
# taxon_df as a json list
taxo_back_lst <- json_list(taxo_back_df)
taxo_back_lst[[1]]
taxo_back_lst[[2]]
taxo_back_df[[1]]
gsub(" ", "%20", path = paste0("/api/v0/taxon/", 1 ))
gsub(" ", "%20", paste0("/api/v0/taxon/", 1 ))
nt-type"
server <- "http://localhost:3000"
config <- httr::add_headers("Content-type" = "application/json")
path <- httr::modify_url(server, path = gsub(" ", "%20", paste0("/api/v0/taxon/", 10 )))
path
library(RPostgreSQL)
server <- "http://localhost:3000"
config <- httr::add_headers("Content-type" = "application/json")
con <- dbConnect(PostgreSQL(),
host = "localhost",
port = 3000,
user = "postgres",
dbname = "mangal_dev")
con <- dbConnect(PostgreSQL(),
host = "localhost",
port = 3000,
user = "postgres",
dbname = "mangal_dev",
password = "postgres")
con <- dbConnect(PostgreSQL(),
host = "localhost",
port = 3000,
dbname = "mangal_dev",
password = "postgres")
con <- dbConnect(PostgreSQL(),
host = "localhost",
port = 3000,
dbname = "mangal_dev",
password = "postgres",
user = "postgres")
L <- "SELECT Count(*)
FROM_taxons;"
server <- "http://localhost:3000"
config <- httr::add_headers("Content-type" = "application/json")
con <- dbConnect(PostgreSQL(),
host = "localhost",
port = 5432,
dbname = "mangal_dev",
password = "postgres",
user = "postgres")
L <- "SELECT Count(*)
FROM_taxons;"
L <- dbSendQuery(con, L)
L
L <- dbGetQuery(con, L)
con <- dbConnect(PostgreSQL(),
host = "localhost",
port = 5432,
dbname = "mangal_dev",
password = "postgres",
user = "postgres")
L <- "SELECT Count(*)
FROM_taxons;"
L <- dbGetQuery(con, L)
L
L <- "SELECT count(*)
FROM_taxons;"
L <- dbGetQuery(con, L)
L
con <- dbConnect(PostgreSQL(),
host = "localhost",
port = 5432,
dbname = "mangal_dev",
password = "postgres",
user = "postgres")
L <- "SELECT count(*)
FROM_taxons;"
A <- dbGetQuery(con, L)
A
dbGetQuery(con, L)
L <- "SELECT count(*)
FROM_taxon;"
A <- dbGetQuery(con, L)
A
L <- "SELECT count(*)
FROM taxons;"
A <- dbGetQuery(con, L)
A
class(A)
A[1,1]
con <- dbConnect(PostgreSQL(),
host = "localhost",
port = 5432,
dbname = "mangal_dev",
password = "postgres",
user = "postgres")
L <- "SELECT count(*)
FROM taxons;"
L <- dbGetQuery(con, L)
L
L[1,1]
