srid  = srid,
date  = as.character(enviro_temp[1, 5]),
value = enviro_temp[1, 3])
inter <- list(taxon_1_level = "population",
taxon_2_level = "population",
date          = as.character(inter_temp[1, 2]),
direction     = "directed",
method        = "Field observation",
description   = "null",
public        = TRUE,
lat           = inter_temp[1, 7],
lon           = inter_temp[1, 8],
srid          = srid)
POST_environment(enviro, attr_altitude)
POST_network(network, enviro = enviro)
POST_taxon(taxa_temp)
POST_taxon
getwd()
setwd("mangal.package/")
devtools::load_all()
library(mangal)
POST_taxon
POST_taxon(taxa_temp)
POST_trait(t_galler_temp)
POST_trait(t_parasit_temp)
POST_interaction(inter_temp, enviro = enviro)
GET_fkey("network", "name", network[["name"]])
i
i <- 1
inter_df <- inter_temp
c(as.character(inter_df[i, "sp_taxon_1"])
)
as.character(inter_df[i, "sp_taxon_1"])
View(inter_df)
# Merging site and interaction
site_inter <- merge(df_inter, df_salix, by = "RSAL")
site_inter <- merge(site_inter, df_galler, by = "RGALLER")
site_inter <- merge(site_inter, df_parasit, by = "RPAR")
site_inter <- merge(site_inter, df_site, by = "REARING_NUMBER")
# Isolate interactions
inter_galler <- site_inter[, c(1, 26, 7, 11, 5 )]
names(inter_galler) <- c("REARING_NUMBER", "date", "sp_taxon_1", "sp_taxon_2", "value")
inter_galler["attr"] <- "Number of galls"
inter_galler["salix"] <- "Salix "
inter_galler <- unite(inter_galler, sp_taxon_1, c(salix, sp_taxon_1), sep = "")
inter_para <- site_inter[, c(1, 26, 11, 24, 6)]
names(inter_para) <- c("REARING_NUMBER", "date", "sp_taxon_1", "sp_taxon_2", "value")
inter_para[, "sp_taxon_2"] <- word(inter_para[, "sp_taxon_2"], start = 1, end = 2)
inter_para["attr"] <- "Number of parasited galls"
Kolpelke_2017_inter <- rbind(inter_galler, inter_para)
rm(inter_galler, inter_para, site_inter)
# Add localistaiton
coord <- subset(df_site, select = c("REARING_NUMBER", "NDECDEG", "EDECDEG"))
names(coord) <- c("REARING_NUMBER", "lat", "lon")
Kolpelke_2017_inter <- merge(Kolpelke_2017_inter, coord, by = "REARING_NUMBER")
Kolpelke_2017_inter <- na.omit(Kolpelke_2017_inter)
rm(coord)
# Add type of interaction
Kolpelke_2017_inter[, "type"] <- "parasitism"
inquiline <- as.vector(t(word(subset(df_parasit, df_parasit$`P/I` == "I" ,select = "FULL_NAME")[, "FULL_NAME"], start = 1, end = 2)))
V <- which(Kolpelke_2017_inter[, "sp_taxon_2"] %in% inquiline)
Kolpelke_2017_inter[V, "type"] <- "commensalism"
rm(inquiline, V)
# write interaction table
write.csv2(x = Kolpelke_2017_inter, file = "importation_mangal/Kolpelke_2017/data/Kolpelke_2017_inter.csv", row.names = FALSE)
getwd()
setwd("..)"
setwd("..")
getwd()
# write interaction table
write.csv2(x = Kolpelke_2017_inter, file = "importation_mangal/Kolpelke_2017/data/Kolpelke_2017_inter.csv", row.names = FALSE)
Kolpelke_2017_inter <- read.csv2("importation_mangal/Kolpelke_2017/data/Kolpelke_2017_inter.csv", header = TRUE, sep = ";")
View(inter_temp)
# Subset table to match rearing_number of the i dataset
inter_temp     <- subset(Kolpelke_2017_inter, Kolpelke_2017_inter$REARING_NUMBER %in% rearing_number)
POST_interaction(inter_temp, enviro = enviro)
setwd("mangal.package/")
devtools::load_all()
library(mangal)
POST_interaction
POST_interaction(inter_temp, enviro = enviro)
devtools::load_all()
library(mangal)
POST_interaction
devtools::load_all()
library(mangal)
POST_interaction
devtools::load_all()
library(mangal)
POST_interaction()
POST_interaction
POST_interaction(inter_temp, enviro = enviro)
View(inter_temp)
View(Kolpelke_2017_inter)
Kolpelke_2017_inter <- unique(Kolpelke_2017_inter)
View(Kolpelke_2017_inter)
write.csv2(x = Kolpelke_2017_inter, file = "importation_mangal/Kolpelke_2017/data/Kolpelke_2017_inter.csv", row.names = FALSE)
setwd("..")
write.csv2(x = Kolpelke_2017_inter, file = "importation_mangal/Kolpelke_2017/data/Kolpelke_2017_inter.csv", row.names = FALSE)
Kolpelke_2017_inter <- read.csv2("importation_mangal/Kolpelke_2017/data/Kolpelke_2017_inter.csv", header = TRUE, sep = ";")
for (i in 1:nrow(Kolpelke_2017_inter)) {
Kolpelke_2017_inter[i, "attr_id"] <- GET_fkey("attribute", c("name", "unit"), c(as.character(Kolpelke_2017_inter[i, "attr"]), NA))
}
# GET_fkey for the attribute id in the interaction table
Kolpelke_2017_inter["attr_id"] <- NA
for (i in 1:nrow(Kolpelke_2017_inter)) {
Kolpelke_2017_inter[i, "attr_id"] <- GET_fkey("attribute", c("name", "unit"), c(as.character(Kolpelke_2017_inter[i, "attr"]), NA))
}
rearing_number
View(trait_parasit)
# Subset table to match rearing_number of the i dataset
inter_temp     <- subset(Kolpelke_2017_inter, Kolpelke_2017_inter$REARING_NUMBER %in% rearing_number)
View(inter_temp)
Kolpelke_2017_inter <- read.csv2("importation_mangal/Kolpelke_2017/data/Kolpelke_2017_inter.csv", header = TRUE, sep = ";")
taxa_back_df <- read.csv2("importation_mangal/Kolpelke_2017/data/Kolpelke_2017_taxa_back.csv", header = TRUE, sep = ";")
taxa_df <- read.csv2("importation_mangal/Kolpelke_2017/data/Kolpelke_2017_taxa_df.csv", header = TRUE, sep = ";")
enviro_df <- read.csv2("importation_mangal/Kolpelke_2017/data/Kolpelke_2017_enviro_df.csv", header = TRUE, sep = ";")
trait_galler <- read.csv2("importation_mangal/Kolpelke_2017/data/Kolpelke_2017_trait_galler.csv", header = TRUE, sep = ";")
trait_parasit <- read.csv2("importation_mangal/Kolpelke_2017/data/Kolpelke_2017_trait_parasit.csv", header = TRUE, sep = ";")
network_df <- read.csv2("importation_mangal/Kolpelke_2017/data/Kolpelke_2017_network_df.csv", header = TRUE, sep = ";")
srid <- 4326
attr_gall <- list(name         = "Number of galls",
table_owner = "interactions",
description = "Number of galls",
unit        = "NA")
attr_paras <- list(name       = "Number of parasited galls",
table_owner = "interactions",
description = "Number of parasited galls",
unit        = "NA")
attr_altitude <- list(name        = "Altitude of the site",
table_owner = "environments",
description = "Altitude of the site",
unit        = "meters")
attr_Endo_Ecto <- list(name       = "Endo/Ecto",
table_owner = "traits",
description = "Type of parasitism (Endoparasitisim or Ectoparasitism",
unit        = "NA")
attr_Koino_Idio <- list(name      = "Koino/Idio",
table_owner = "traits",
description = "Is the parasite Koinobiont or Idiobiont",
unit        = "NA")
attr_stage <- list(name        = "stage of the host",
table_owner = "traits",
description = "Stage of the host at time of parasitism",
unit        = "NA")
attr_type <- list(name        = "gall type",
table_owner = "traits",
description = "Type of gall done the parasite Salix",
unit        = "NA")
ref <- list(doi       = "NA",
jstor     = "NA",
pmid      = "NA",
paper_url = "null",
data_url  = "URL of the attached data",
author    = "firt author name",
year      = "NA",
bibtex    = "bibtext long format")
users <- list(name         = "name",
email        = "null",
orcid        = "null",
organization = "null",
type         = "administrator")
dataset <- list(name        = "name",
date        = "1111-11-11",
description = "Description of the dataset collected",
public      = FALSE)
trait <- list(date = "1111-11-11")
#------------------------------
# POST commun table
#------------------------------
POST_attribute(attr_gall)
POST_attribute(attr_paras)
POST_attribute(attr_altitude)
POST_attribute(attr_Endo_Ecto)
POST_attribute(attr_Koino_Idio)
POST_attribute(attr_stage)
POST_attribute(attr_type)
POST_ref()
POST_user()
POST_dataset()
POST_taxa_back()
# GET_fkey for the attribute id in the interaction table
Kolpelke_2017_inter["attr_id"] <- NA
for (i in 1:nrow(Kolpelke_2017_inter)) {
Kolpelke_2017_inter[i, "attr_id"] <- GET_fkey("attribute", c("name", "unit"), c(as.character(Kolpelke_2017_inter[i, "attr"]), NA))
}
# Subset table to select data from i dataset
network_temp <- subset(network_df, network_df$number == 1)
rearing_number <- as.vector(network_temp$REARING_NUMBER)
network_temp <- network_temp[1, ]
enviro_temp  <- subset(enviro_df, enviro_df$number == 1)
# Subset table to match rearing_number of the i dataset
inter_temp     <- subset(Kolpelke_2017_inter, Kolpelke_2017_inter$REARING_NUMBER %in% rearing_number)
taxa_temp     <- subset(taxa_df, taxa_df$REARING_NUMBER %in% rearing_number)
taxa_temp     <- taxa_temp[!duplicated(taxa_temp[,"original_name"]),]
t_galler_temp  <- subset(subset(trait_galler, trait_galler$REARING_NUMBER %in% rearing_number), duplicated(taxa))
t_parasit_temp <- subset(trait_parasit, trait_parasit$REARING_NUMBER %in% rearing_number)
t_parasit_temp <- t_parasit_temp[!duplicated(t_parasit_temp[,c("taxa", "name")]),]
network <- list(name             = as.character(network_temp[1, 5]),
date             = as.character(network_temp[1, 7]),
lat              = network_temp[1, 3],
lon              = network_temp[1, 4],
srid             = srid,
description      = as.character(network_temp[1, 1]),
public           = TRUE,
all_interactions = FALSE)
enviro <- list(name  = as.character(enviro_temp[1, 6]),
lat   = enviro_temp[1, 1],
lon   = enviro_temp[1, 2],
srid  = srid,
date  = as.character(enviro_temp[1, 5]),
value = enviro_temp[1, 3])
inter <- list(taxon_1_level = "population",
taxon_2_level = "population",
date          = as.character(inter_temp[1, 2]),
direction     = "directed",
method        = "Field observation",
description   = "null",
public        = TRUE,
lat           = inter_temp[1, 7],
lon           = inter_temp[1, 8],
srid          = srid)
POST_environment(enviro, attr_altitude)
POST_network(network, enviro = enviro)
POST_taxon(taxa_temp)
POST_trait(t_galler_temp)
POST_trait(t_parasit_temp)
POST_interaction(inter_temp, enviro = enviro)
#------------------------------
# POST commun table
#------------------------------
POST_attribute(attr_gall)
POST_attribute(attr_paras)
POST_attribute(attr_altitude)
POST_attribute(attr_Endo_Ecto)
POST_attribute(attr_Koino_Idio)
POST_attribute(attr_stage)
POST_attribute(attr_type)
POST_ref()
POST_user()
POST_dataset()
POST_taxa_back()
# First loop
for (i in 1:max(network_df$number)){
# Subset table to select data from i dataset
network_temp <- subset(network_df, network_df$number == i)
rearing_number <- as.vector(network_temp$REARING_NUMBER)
network_temp <- network_temp[1, ]
enviro_temp  <- subset(enviro_df, enviro_df$number == i)
# Subset table to match rearing_number of the i dataset
inter_temp     <- subset(Kolpelke_2017_inter, Kolpelke_2017_inter$REARING_NUMBER %in% rearing_number)
taxa_temp     <- subset(taxa_df, taxa_df$REARING_NUMBER %in% rearing_number)
taxa_temp     <- taxa_temp[!duplicated(taxa_temp[,"original_name"]),]
t_galler_temp  <- subset(subset(trait_galler, trait_galler$REARING_NUMBER %in% rearing_number), duplicated(taxa))
t_parasit_temp <- subset(trait_parasit, trait_parasit$REARING_NUMBER %in% rearing_number)
t_parasit_temp <- t_parasit_temp[!duplicated(t_parasit_temp[,c("taxa", "name")]),]
# Set metadata
network <- list(name             = as.character(network_temp[1, 5]),
date             = as.character(network_temp[1, 7]),
lat              = network_temp[1, 3],
lon              = network_temp[1, 4],
srid             = srid,
description      = as.character(network_temp[1, 1]),
public           = TRUE,
all_interactions = FALSE)
enviro <- list(name  = as.character(enviro_temp[1, 6]),
lat   = enviro_temp[1, 1],
lon   = enviro_temp[1, 2],
srid  = srid,
date  = as.character(enviro_temp[1, 5]),
value = enviro_temp[1, 3])
inter <- list(taxon_1_level = "population",
taxon_2_level = "population",
date          = as.character(inter_temp[1, 2]),
direction     = "directed",
method        = "Field observation",
description   = "null",
public        = TRUE,
lat           = inter_temp[1, 7],
lon           = inter_temp[1, 8],
srid          = srid)
# Inject table
print("enviro")
POST_environment(enviro, attr_altitude)
print("network")
POST_network(network, enviro = enviro)
print("taxa")
POST_taxon(taxa_temp)
print("trait galler")
POST_trait(t_galler_temp)
print("trait parasit")
POST_trait(t_parasit_temp)
print("interaction")
POST_interaction(inter_temp, enviro = enviro)
}
getwd()
setwd("mangal.package/")
devtools::load_all()
devtools::load_all()
library(mangal)
POST_trait
#------------------------------
# POST commun table
#------------------------------
POST_attribute(attr_gall)
POST_attribute(attr_paras)
POST_attribute(attr_altitude)
POST_attribute(attr_Endo_Ecto)
POST_attribute(attr_Koino_Idio)
POST_attribute(attr_stage)
POST_attribute(attr_type)
POST_ref()
POST_user()
POST_dataset()
POST_taxa_back()
# First loop
for (i in 1:max(network_df$number)){
# Subset table to select data from i dataset
network_temp <- subset(network_df, network_df$number == i)
rearing_number <- as.vector(network_temp$REARING_NUMBER)
network_temp <- network_temp[1, ]
enviro_temp  <- subset(enviro_df, enviro_df$number == i)
# Subset table to match rearing_number of the i dataset
inter_temp     <- subset(Kolpelke_2017_inter, Kolpelke_2017_inter$REARING_NUMBER %in% rearing_number)
taxa_temp     <- subset(taxa_df, taxa_df$REARING_NUMBER %in% rearing_number)
taxa_temp     <- taxa_temp[!duplicated(taxa_temp[,"original_name"]),]
t_galler_temp  <- subset(subset(trait_galler, trait_galler$REARING_NUMBER %in% rearing_number), duplicated(taxa))
t_parasit_temp <- subset(trait_parasit, trait_parasit$REARING_NUMBER %in% rearing_number)
t_parasit_temp <- t_parasit_temp[!duplicated(t_parasit_temp[,c("taxa", "name")]),]
# Set metadata
network <- list(name             = as.character(network_temp[1, 5]),
date             = as.character(network_temp[1, 7]),
lat              = network_temp[1, 3],
lon              = network_temp[1, 4],
srid             = srid,
description      = as.character(network_temp[1, 1]),
public           = TRUE,
all_interactions = FALSE)
enviro <- list(name  = as.character(enviro_temp[1, 6]),
lat   = enviro_temp[1, 1],
lon   = enviro_temp[1, 2],
srid  = srid,
date  = as.character(enviro_temp[1, 5]),
value = enviro_temp[1, 3])
inter <- list(taxon_1_level = "population",
taxon_2_level = "population",
date          = as.character(inter_temp[1, 2]),
direction     = "directed",
method        = "Field observation",
description   = "null",
public        = TRUE,
lat           = inter_temp[1, 7],
lon           = inter_temp[1, 8],
srid          = srid)
# Inject table
print("enviro")
POST_environment(enviro, attr_altitude)
print("network")
POST_network(network, enviro = enviro)
print("taxa")
POST_taxon(taxa_temp)
print("trait galler")
POST_trait(t_galler_temp, network = network)
print("trait parasit")
POST_trait(t_parasit_temp, network = network)
print("interaction")
POST_interaction(inter_temp, enviro = enviro)
}
i = 1
#------------------------------
# POST commun table
#------------------------------
POST_attribute(attr_gall)
POST_attribute(attr_paras)
POST_attribute(attr_altitude)
POST_attribute(attr_Endo_Ecto)
POST_attribute(attr_Koino_Idio)
POST_attribute(attr_stage)
POST_attribute(attr_type)
POST_ref()
POST_user()
POST_dataset()
POST_taxa_back()
# Subset table to select data from i dataset
network_temp <- subset(network_df, network_df$number == i)
rearing_number <- as.vector(network_temp$REARING_NUMBER)
network_temp <- network_temp[1, ]
enviro_temp  <- subset(enviro_df, enviro_df$number == i)
# Subset table to match rearing_number of the i dataset
inter_temp     <- subset(Kolpelke_2017_inter, Kolpelke_2017_inter$REARING_NUMBER %in% rearing_number)
taxa_temp     <- subset(taxa_df, taxa_df$REARING_NUMBER %in% rearing_number)
taxa_temp     <- taxa_temp[!duplicated(taxa_temp[,"original_name"]),]
t_galler_temp  <- subset(subset(trait_galler, trait_galler$REARING_NUMBER %in% rearing_number), duplicated(taxa))
t_parasit_temp <- subset(trait_parasit, trait_parasit$REARING_NUMBER %in% rearing_number)
t_parasit_temp <- t_parasit_temp[!duplicated(t_parasit_temp[,c("taxa", "name")]),]
network <- list(name             = as.character(network_temp[1, 5]),
date             = as.character(network_temp[1, 7]),
lat              = network_temp[1, 3],
lon              = network_temp[1, 4],
srid             = srid,
description      = as.character(network_temp[1, 1]),
public           = TRUE,
all_interactions = FALSE)
enviro <- list(name  = as.character(enviro_temp[1, 6]),
lat   = enviro_temp[1, 1],
lon   = enviro_temp[1, 2],
srid  = srid,
date  = as.character(enviro_temp[1, 5]),
value = enviro_temp[1, 3])
inter <- list(taxon_1_level = "population",
taxon_2_level = "population",
date          = as.character(inter_temp[1, 2]),
direction     = "directed",
method        = "Field observation",
description   = "null",
public        = TRUE,
lat           = inter_temp[1, 7],
lon           = inter_temp[1, 8],
srid          = srid)
# Inject table
print("enviro")
POST_environment(enviro, attr_altitude)
print("network")
POST_network(network, enviro = enviro)
print("taxa")
POST_taxon(taxa_temp)
print("trait galler")
POST_trait(t_galler_temp, network = network)
print("trait parasit")
POST_trait(t_parasit_temp, network = network)
print("interaction")
POST_interaction(inter_temp, enviro = enviro)
i = 2
# Subset table to select data from i dataset
network_temp <- subset(network_df, network_df$number == i)
rearing_number <- as.vector(network_temp$REARING_NUMBER)
network_temp <- network_temp[1, ]
enviro_temp  <- subset(enviro_df, enviro_df$number == i)
# Subset table to match rearing_number of the i dataset
inter_temp     <- subset(Kolpelke_2017_inter, Kolpelke_2017_inter$REARING_NUMBER %in% rearing_number)
taxa_temp     <- subset(taxa_df, taxa_df$REARING_NUMBER %in% rearing_number)
taxa_temp     <- taxa_temp[!duplicated(taxa_temp[,"original_name"]),]
t_galler_temp  <- subset(subset(trait_galler, trait_galler$REARING_NUMBER %in% rearing_number), duplicated(taxa))
t_parasit_temp <- subset(trait_parasit, trait_parasit$REARING_NUMBER %in% rearing_number)
t_parasit_temp <- t_parasit_temp[!duplicated(t_parasit_temp[,c("taxa", "name")]),]
network <- list(name             = as.character(network_temp[1, 5]),
date             = as.character(network_temp[1, 7]),
lat              = network_temp[1, 3],
lon              = network_temp[1, 4],
srid             = srid,
description      = as.character(network_temp[1, 1]),
public           = TRUE,
all_interactions = FALSE)
enviro <- list(name  = as.character(enviro_temp[1, 6]),
lat   = enviro_temp[1, 1],
lon   = enviro_temp[1, 2],
srid  = srid,
date  = as.character(enviro_temp[1, 5]),
value = enviro_temp[1, 3])
inter <- list(taxon_1_level = "population",
taxon_2_level = "population",
date          = as.character(inter_temp[1, 2]),
direction     = "directed",
method        = "Field observation",
description   = "null",
public        = TRUE,
lat           = inter_temp[1, 7],
lon           = inter_temp[1, 8],
srid          = srid)
POST_environment(enviro, attr_altitude)
POST_network(network, enviro = enviro)
POST_taxon(taxa_temp)
POST_trait(t_galler_temp, network = network)
POST_trait(t_parasit_temp, network = network)
POST_interaction(inter_temp, enviro = enviro)
inter_df <- inter_temp
attr <- NULL
View(inter_df)
# Retrive foreign keys
## taxon_1 & taxon_2
inter_df[, "taxon_1"] <- NA
inter_df[, "taxon_2"] <- NA
for (i in 1:nrow(inter_df)) {
try(inter_df[i, "taxon_1"] <- GET_fkey("taxa", c("original_name", "network_id"), c(as.character(inter_df[i, "sp_taxon_1"]), GET_fkey("network", "name", network[["name"]]))))
try(inter_df[i, "taxon_2"] <- GET_fkey("taxa", c("original_name", "network_id"), c(as.character(inter_df[i, "sp_taxon_2"]), GET_fkey("network", "name", network[["name"]]))))
}
server <- mangal.env$prod$server
if (length(content(httr::GET(url = gsub(" ", "%20", paste0(server, mangal.env$base, "/environment/?name=", enviro[["name"]], "&date=", enviro[["date"]], "&value=", enviro[["value"]])), config = mangal.env$headers))) != 0){
inter_df[, "environment_id"] <- GET_fkey("environment", c("name", "date", "value"), c(enviro[["name"]], enviro[["date"]], enviro[["value"]]))
}
if (length(content(httr::GET(url = gsub(" ", "%20", paste0(server, mangal.env$base, "/users/?name=", users[["name"]])), config = mangal.env$headers))) != 0){
inter_df[, "user_id"] <- GET_fkey("users", "name", users[["name"]])
}
# Remove unused column
inter_df <- inter_df[,3:ncol(inter_df)]
print("keys added")
# attach location to the interaction metadata
geoloc <- geojsonio::geojson_list(c(inter$lat,inter$lon))$features[[1]]$geometry
geoloc$crs <- list(type="name",properties=list(name=paste0("EPSG:",inter$srid)))
inter$localisation <- geoloc
inter[c("lat","lon","srid")] <- NULL
# Set list of interaction + metadata
inter_lst <- list()
for (i in 1:nrow(inter_df)) {
inter_lst[[i]] <- as.list(inter_df[i, ])
inter_lst[[i]] <- c(inter_lst[[i]], inter)
# to JSON
inter_lst[[i]] <- toJSON(inter_lst[[i]], auto_unbox = TRUE, digits = 12)
}
print("metadata added")
inter_lst
View(network_df)
