taxa_temp     <- subset(taxa_df, taxa_df$REARING_NUMBER %in% rearing_number)
taxa_temp     <- taxa_temp[!duplicated(taxa_temp[,"original_name"]),]
taxa_temp$original_name <- as.character(taxa_temp$original_name)
# Add the new taxa to the taxa_temp table
taxa_temp <- rbind(taxa_temp, taxa_temp[which(taxa_temp$original_name == SP1),])
taxa_temp[nrow(taxa_temp), "original_name"] <- paste(taxa_temp[nrow(taxa_temp), "original_name"], sp_counter[which(sp_counter$sp == SP1), 2])
taxa_temp <- rbind(taxa_temp, taxa_temp[which(taxa_temp$original_name == SP2),])
taxa_temp[nrow(taxa_temp), "original_name"] <- paste(taxa_temp[nrow(taxa_temp), "original_name"], sp_counter[which(sp_counter$sp == SP2), 2])
# +1 for thoses species in the counter
sp_counter[which(sp_counter$sp == SP1), 2] <- sp_counter[which(sp_counter$sp == SP1), 2] + 1
sp_counter[which(sp_counter$sp == SP2), 2] <- sp_counter[which(sp_counter$sp == SP2), 2] + 1
# Change it in the inter_temp table
RN <- inter_temp[anyDuplicated(inter_temp[, c("sp_taxon_1", "sp_taxon_2")]), "REARING_NUMBER"]
RN
# Change it in the inter_temp table
RN <- as.character(inter_temp[anyDuplicated(inter_temp[, c("sp_taxon_1", "sp_taxon_2")]), "REARING_NUMBER"])
str_detect(inter_temp[, "sp_taxon_1"], SP2)
sum(str_detect(inter_temp[, "sp_taxon_1"], SP2))
str_detect(inter_temp[1, "sp_taxon_1"], SP2)
taxa_temp     <- taxa_temp[!duplicated(taxa_temp[,"original_name"]),]
taxa_temp     <- subset(taxa_df, taxa_df$REARING_NUMBER %in% rearing_number)
taxa_temp     <- taxa_temp[!duplicated(taxa_temp[,"original_name"]),]
taxa_temp$original_name <- as.character(taxa_temp$original_name)
# Add the new taxa to the taxa_temp table
taxa_temp <- rbind(taxa_temp, taxa_temp[which(taxa_temp$original_name == SP1),])
taxa_temp[nrow(taxa_temp), "original_name"] <- paste(taxa_temp[nrow(taxa_temp), "original_name"], sp_counter[which(sp_counter$sp == SP1), 2])
new_SP1 <- taxa_temp[nrow(taxa_temp), 2]
taxa_temp     <- subset(taxa_df, taxa_df$REARING_NUMBER %in% rearing_number)
taxa_temp     <- taxa_temp[!duplicated(taxa_temp[,"original_name"]),]
taxa_temp$original_name <- as.character(taxa_temp$original_name)
# Create counter for all species, assing number 1 to them
sp_counter <- data.frame(sp = taxa_temp[, "original_name"], num = rep(1, times = nrow(taxa_temp)))
# Add the new taxa to the taxa_temp table
taxa_temp <- rbind(taxa_temp, taxa_temp[which(taxa_temp$original_name == SP1),])
taxa_temp[nrow(taxa_temp), "original_name"] <- paste(taxa_temp[nrow(taxa_temp), "original_name"], sp_counter[which(sp_counter$sp == SP1), 2])
new_SP1 <- taxa_temp[nrow(taxa_temp), 2]
taxa_temp <- rbind(taxa_temp, taxa_temp[which(taxa_temp$original_name == SP2),])
taxa_temp[nrow(taxa_temp), "original_name"] <- paste(taxa_temp[nrow(taxa_temp), "original_name"], sp_counter[which(sp_counter$sp == SP2), 2])
new_SP2 <- taxa_temp[nrow(taxa_temp), 2]
# +1 for thoses species in the counter
sp_counter[which(sp_counter$sp == SP1), 2] <- sp_counter[which(sp_counter$sp == SP1), 2] + 1
sp_counter[which(sp_counter$sp == SP2), 2] <- sp_counter[which(sp_counter$sp == SP2), 2] + 1
# Change it in the inter_temp table
RN <- as.character(inter_temp[anyDuplicated(inter_temp[, c("sp_taxon_1", "sp_taxon_2")]), "REARING_NUMBER"])
for (i in 1:rnow(inter_temp)) {
if(inter_temp[i, "REARING_NUMBER"] == RN){
if(str_detect(inter_temp[i, "sp_taxon_1", SP1])) inter_temp[i, "sp_taxon_1"] <- new_SP1
if(str_detect(inter_temp[i, "sp_taxon_2", SP1])) inter_temp[i, "sp_taxon_1"] <- new_SP1
if(str_detect(inter_temp[i, "sp_taxon_1", SP2])) inter_temp[i, "sp_taxon_1"] <- new_SP2
if(str_detect(inter_temp[i, "sp_taxon_2", SP2])) inter_temp[i, "sp_taxon_1"] <- new_SP2
}
}
for (i in 1:nrow(inter_temp)) {
if(inter_temp[i, "REARING_NUMBER"] == RN){
if(str_detect(inter_temp[i, "sp_taxon_1", SP1])) inter_temp[i, "sp_taxon_1"] <- new_SP1
if(str_detect(inter_temp[i, "sp_taxon_2", SP1])) inter_temp[i, "sp_taxon_1"] <- new_SP1
if(str_detect(inter_temp[i, "sp_taxon_1", SP2])) inter_temp[i, "sp_taxon_1"] <- new_SP2
if(str_detect(inter_temp[i, "sp_taxon_2", SP2])) inter_temp[i, "sp_taxon_1"] <- new_SP2
}
}
for (i in 1:nrow(inter_temp)) {
if(inter_temp[i, "REARING_NUMBER"] == RN){
if(str_detect(inter_temp[i, "sp_taxon_1"], SP1)) inter_temp[i, "sp_taxon_1"] <- new_SP1
if(str_detect(inter_temp[i, "sp_taxon_2"], SP1)) inter_temp[i, "sp_taxon_1"] <- new_SP1
if(str_detect(inter_temp[i, "sp_taxon_1"], SP2)) inter_temp[i, "sp_taxon_1"] <- new_SP2
if(str_detect(inter_temp[i, "sp_taxon_2"], SP2)) inter_temp[i, "sp_taxon_1"] <- new_SP2
}
}
anyDuplicated(inter_temp[, c("sp_taxon_1", "sp_taxon_2")])
?anyDuplicated
which(anyDuplicated(inter_temp[, c("sp_taxon_1", "sp_taxon_2")])
)
View(inter_temp)
anyDuplicated(inter_temp[, c("sp_taxon_1", "sp_taxon_2")])
anyDuplicated(inter_temp[, c("sp_taxon_1", "sp_taxon_2")]
)
# Subset table to match rearing_number of the i dataset
inter_temp     <- subset(Kolpelke_2017_inter, Kolpelke_2017_inter$REARING_NUMBER %in% rearing_number)
inter_temp$sp_taxon_1 <- as.character(inter_temp$sp_taxon_1)
inter_temp$sp_taxon_2 <- as.character(inter_temp$sp_taxon_2)
anyDuplicated(inter_temp[, c("sp_taxon_1", "sp_taxon_2")]
)
SP1 <- inter_temp[anyDuplicated(inter_temp[, c("sp_taxon_1", "sp_taxon_2")]), "sp_taxon_1"]
SP2 <- inter_temp[anyDuplicated(inter_temp[, c("sp_taxon_1", "sp_taxon_2")]), "sp_taxon_2"]
# Add the new taxa to the taxa_temp table
taxa_temp <- rbind(taxa_temp, taxa_temp[which(taxa_temp$original_name == SP1),])
taxa_temp[nrow(taxa_temp), "original_name"] <- paste(taxa_temp[nrow(taxa_temp), "original_name"], sp_counter[which(sp_counter$sp == SP1), 2])
new_SP1 <- taxa_temp[nrow(taxa_temp), 2]
taxa_temp <- rbind(taxa_temp, taxa_temp[which(taxa_temp$original_name == SP2),])
taxa_temp[nrow(taxa_temp), "original_name"] <- paste(taxa_temp[nrow(taxa_temp), "original_name"], sp_counter[which(sp_counter$sp == SP2), 2])
new_SP2 <- taxa_temp[nrow(taxa_temp), 2]
# +1 for thoses species in the counter
sp_counter[which(sp_counter$sp == SP1), 2] <- sp_counter[which(sp_counter$sp == SP1), 2] + 1
sp_counter[which(sp_counter$sp == SP2), 2] <- sp_counter[which(sp_counter$sp == SP2), 2] + 1
# Change it in the inter_temp table
RN <- as.character(inter_temp[anyDuplicated(inter_temp[, c("sp_taxon_1", "sp_taxon_2")]), "REARING_NUMBER"])
for (i in 1:nrow(inter_temp)) {
if(inter_temp[i, "REARING_NUMBER"] == RN){
if(str_detect(inter_temp[i, "sp_taxon_1"], SP1)) inter_temp[i, "sp_taxon_1"] <- new_SP1
if(str_detect(inter_temp[i, "sp_taxon_2"], SP1)) inter_temp[i, "sp_taxon_1"] <- new_SP1
if(str_detect(inter_temp[i, "sp_taxon_1"], SP2)) inter_temp[i, "sp_taxon_1"] <- new_SP2
if(str_detect(inter_temp[i, "sp_taxon_2"], SP2)) inter_temp[i, "sp_taxon_1"] <- new_SP2
}
}
# Subset table to select data from i dataset
network_temp <- subset(network_df, network_df$number == i)
rearing_number <- as.vector(network_temp$REARING_NUMBER)
network_temp <- network_temp[1, ]
enviro_temp  <- subset(enviro_df, enviro_df$number == i)
# Subset table to match rearing_number of the i dataset
inter_temp     <- subset(Kolpelke_2017_inter, Kolpelke_2017_inter$REARING_NUMBER %in% rearing_number)
inter_temp$sp_taxon_1 <- as.character(inter_temp$sp_taxon_1)
inter_temp$sp_taxon_2 <- as.character(inter_temp$sp_taxon_2)
taxa_temp     <- subset(taxa_df, taxa_df$REARING_NUMBER %in% rearing_number)
taxa_temp     <- taxa_temp[!duplicated(taxa_temp[,"original_name"]),]
taxa_temp$original_name <- as.character(taxa_temp$original_name)
t_galler_temp  <- subset(subset(trait_galler, trait_galler$REARING_NUMBER %in% rearing_number), duplicated(taxa))
t_parasit_temp <- subset(trait_parasit, trait_parasit$REARING_NUMBER %in% rearing_number)
t_parasit_temp <- t_parasit_temp[!duplicated(t_parasit_temp[,c("taxa", "name")]),]
# Create counter for all species, assing number 1 to them
sp_counter <- data.frame(sp = taxa_temp[, "original_name"], num = rep(1, times = nrow(taxa_temp)))
i
i = 2
# Subset table to select data from i dataset
network_temp <- subset(network_df, network_df$number == i)
rearing_number <- as.vector(network_temp$REARING_NUMBER)
network_temp <- network_temp[1, ]
enviro_temp  <- subset(enviro_df, enviro_df$number == i)
# Subset table to match rearing_number of the i dataset
inter_temp     <- subset(Kolpelke_2017_inter, Kolpelke_2017_inter$REARING_NUMBER %in% rearing_number)
inter_temp$sp_taxon_1 <- as.character(inter_temp$sp_taxon_1)
inter_temp$sp_taxon_2 <- as.character(inter_temp$sp_taxon_2)
taxa_temp     <- subset(taxa_df, taxa_df$REARING_NUMBER %in% rearing_number)
taxa_temp     <- taxa_temp[!duplicated(taxa_temp[,"original_name"]),]
taxa_temp$original_name <- as.character(taxa_temp$original_name)
t_galler_temp  <- subset(subset(trait_galler, trait_galler$REARING_NUMBER %in% rearing_number), duplicated(taxa))
t_parasit_temp <- subset(trait_parasit, trait_parasit$REARING_NUMBER %in% rearing_number)
t_parasit_temp <- t_parasit_temp[!duplicated(t_parasit_temp[,c("taxa", "name")]),]
# Create counter for all species, assing number 1 to them
sp_counter <- data.frame(sp = taxa_temp[, "original_name"], num = rep(1, times = nrow(taxa_temp)))
# Loop : add a number to the species of a duplicated interaction
while(anyDuplicated(inter_temp[, c("sp_taxon_1", "sp_taxon_2")]) >= 1){
SP1 <- inter_temp[anyDuplicated(inter_temp[, c("sp_taxon_1", "sp_taxon_2")]), "sp_taxon_1"]
SP2 <- inter_temp[anyDuplicated(inter_temp[, c("sp_taxon_1", "sp_taxon_2")]), "sp_taxon_2"]
# Add the new taxa to the taxa_temp table
taxa_temp <- rbind(taxa_temp, taxa_temp[which(taxa_temp$original_name == SP1),])
taxa_temp[nrow(taxa_temp), "original_name"] <- paste(taxa_temp[nrow(taxa_temp), "original_name"], sp_counter[which(sp_counter$sp == SP1), 2])
new_SP1 <- taxa_temp[nrow(taxa_temp), 2]
taxa_temp <- rbind(taxa_temp, taxa_temp[which(taxa_temp$original_name == SP2),])
taxa_temp[nrow(taxa_temp), "original_name"] <- paste(taxa_temp[nrow(taxa_temp), "original_name"], sp_counter[which(sp_counter$sp == SP2), 2])
new_SP2 <- taxa_temp[nrow(taxa_temp), 2]
# +1 for thoses species in the counter
sp_counter[which(sp_counter$sp == SP1), 2] <- sp_counter[which(sp_counter$sp == SP1), 2] + 1
sp_counter[which(sp_counter$sp == SP2), 2] <- sp_counter[which(sp_counter$sp == SP2), 2] + 1
# Change it in the inter_temp table
RN <- as.character(inter_temp[anyDuplicated(inter_temp[, c("sp_taxon_1", "sp_taxon_2")]), "REARING_NUMBER"])
for (i in 1:nrow(inter_temp)) {
if(inter_temp[i, "REARING_NUMBER"] == RN){
if(str_detect(inter_temp[i, "sp_taxon_1"], SP1)) inter_temp[i, "sp_taxon_1"] <- new_SP1
if(str_detect(inter_temp[i, "sp_taxon_2"], SP1)) inter_temp[i, "sp_taxon_2"] <- new_SP1
if(str_detect(inter_temp[i, "sp_taxon_1"], SP2)) inter_temp[i, "sp_taxon_1"] <- new_SP2
if(str_detect(inter_temp[i, "sp_taxon_2"], SP2)) inter_temp[i, "sp_taxon_2"] <- new_SP2
}
}
}
i = 2
# Subset table to select data from i dataset
network_temp <- subset(network_df, network_df$number == i)
rearing_number <- as.vector(network_temp$REARING_NUMBER)
network_temp <- network_temp[1, ]
enviro_temp  <- subset(enviro_df, enviro_df$number == i)
# Subset table to match rearing_number of the i dataset
inter_temp     <- subset(Kolpelke_2017_inter, Kolpelke_2017_inter$REARING_NUMBER %in% rearing_number)
inter_temp$sp_taxon_1 <- as.character(inter_temp$sp_taxon_1)
inter_temp$sp_taxon_2 <- as.character(inter_temp$sp_taxon_2)
taxa_temp     <- subset(taxa_df, taxa_df$REARING_NUMBER %in% rearing_number)
taxa_temp     <- taxa_temp[!duplicated(taxa_temp[,"original_name"]),]
taxa_temp$original_name <- as.character(taxa_temp$original_name)
t_galler_temp  <- subset(subset(trait_galler, trait_galler$REARING_NUMBER %in% rearing_number), duplicated(taxa))
t_parasit_temp <- subset(trait_parasit, trait_parasit$REARING_NUMBER %in% rearing_number)
t_parasit_temp <- t_parasit_temp[!duplicated(t_parasit_temp[,c("taxa", "name")]),]
# Create counter for all species, assing number 1 to them
sp_counter <- data.frame(sp = taxa_temp[, "original_name"], num = rep(1, times = nrow(taxa_temp)))
SP1 <- inter_temp[anyDuplicated(inter_temp[, c("sp_taxon_1", "sp_taxon_2")]), "sp_taxon_1"]
SP2 <- inter_temp[anyDuplicated(inter_temp[, c("sp_taxon_1", "sp_taxon_2")]), "sp_taxon_2"]
# Add the new taxa to the taxa_temp table
taxa_temp <- rbind(taxa_temp, taxa_temp[which(taxa_temp$original_name == SP1),])
taxa_temp[nrow(taxa_temp), "original_name"] <- paste(taxa_temp[nrow(taxa_temp), "original_name"], sp_counter[which(sp_counter$sp == SP1), 2])
new_SP1 <- taxa_temp[nrow(taxa_temp), 2]
taxa_temp <- rbind(taxa_temp, taxa_temp[which(taxa_temp$original_name == SP2),])
taxa_temp[nrow(taxa_temp), "original_name"] <- paste(taxa_temp[nrow(taxa_temp), "original_name"], sp_counter[which(sp_counter$sp == SP2), 2])
new_SP2 <- taxa_temp[nrow(taxa_temp), 2]
# +1 for thoses species in the counter
sp_counter[which(sp_counter$sp == SP1), 2] <- sp_counter[which(sp_counter$sp == SP1), 2] + 1
sp_counter[which(sp_counter$sp == SP2), 2] <- sp_counter[which(sp_counter$sp == SP2), 2] + 1
# Change it in the inter_temp table
RN <- as.character(inter_temp[anyDuplicated(inter_temp[, c("sp_taxon_1", "sp_taxon_2")]), "REARING_NUMBER"])
for (j in 1:nrow(inter_temp)) {
if(inter_temp[i, "REARING_NUMBER"] == RN){
if(str_detect(inter_temp[j, "sp_taxon_1"], SP1)) inter_temp[j, "sp_taxon_1"] <- new_SP1
if(str_detect(inter_temp[j, "sp_taxon_2"], SP1)) inter_temp[j, "sp_taxon_2"] <- new_SP1
if(str_detect(inter_temp[j, "sp_taxon_1"], SP2)) inter_temp[j, "sp_taxon_1"] <- new_SP2
if(str_detect(inter_temp[j, "sp_taxon_2"], SP2)) inter_temp[j, "sp_taxon_2"] <- new_SP2
}
}
for (j in 1:nrow(inter_temp)) {
if(inter_temp[j, "REARING_NUMBER"] == RN){
if(str_detect(inter_temp[j, "sp_taxon_1"], SP1)) inter_temp[j, "sp_taxon_1"] <- new_SP1
if(str_detect(inter_temp[j, "sp_taxon_2"], SP1)) inter_temp[j, "sp_taxon_2"] <- new_SP1
if(str_detect(inter_temp[j, "sp_taxon_1"], SP2)) inter_temp[j, "sp_taxon_1"] <- new_SP2
if(str_detect(inter_temp[j, "sp_taxon_2"], SP2)) inter_temp[j, "sp_taxon_2"] <- new_SP2
}
}
anyDuplicated(inter_temp[, c("sp_taxon_1", "sp_taxon_2")]
)
# Subset table to select data from i dataset
network_temp <- subset(network_df, network_df$number == i)
rearing_number <- as.vector(network_temp$REARING_NUMBER)
network_temp <- network_temp[1, ]
enviro_temp  <- subset(enviro_df, enviro_df$number == i)
# Subset table to match rearing_number of the i dataset
inter_temp     <- subset(Kolpelke_2017_inter, Kolpelke_2017_inter$REARING_NUMBER %in% rearing_number)
inter_temp$sp_taxon_1 <- as.character(inter_temp$sp_taxon_1)
inter_temp$sp_taxon_2 <- as.character(inter_temp$sp_taxon_2)
taxa_temp     <- subset(taxa_df, taxa_df$REARING_NUMBER %in% rearing_number)
taxa_temp     <- taxa_temp[!duplicated(taxa_temp[,"original_name"]),]
taxa_temp$original_name <- as.character(taxa_temp$original_name)
t_galler_temp  <- subset(subset(trait_galler, trait_galler$REARING_NUMBER %in% rearing_number), duplicated(taxa))
t_parasit_temp <- subset(trait_parasit, trait_parasit$REARING_NUMBER %in% rearing_number)
t_parasit_temp <- t_parasit_temp[!duplicated(t_parasit_temp[,c("taxa", "name")]),]
# Create counter for all species, assing number 1 to them
sp_counter <- data.frame(sp = taxa_temp[, "original_name"], num = rep(1, times = nrow(taxa_temp)))
# Loop : add a number to the species of a duplicated interaction
while(anyDuplicated(inter_temp[, c("sp_taxon_1", "sp_taxon_2")]) >= 1){
SP1 <- inter_temp[anyDuplicated(inter_temp[, c("sp_taxon_1", "sp_taxon_2")]), "sp_taxon_1"]
SP2 <- inter_temp[anyDuplicated(inter_temp[, c("sp_taxon_1", "sp_taxon_2")]), "sp_taxon_2"]
# Add the new taxa to the taxa_temp table
taxa_temp <- rbind(taxa_temp, taxa_temp[which(taxa_temp$original_name == SP1),])
taxa_temp[nrow(taxa_temp), "original_name"] <- paste(taxa_temp[nrow(taxa_temp), "original_name"], sp_counter[which(sp_counter$sp == SP1), 2])
new_SP1 <- taxa_temp[nrow(taxa_temp), 2]
taxa_temp <- rbind(taxa_temp, taxa_temp[which(taxa_temp$original_name == SP2),])
taxa_temp[nrow(taxa_temp), "original_name"] <- paste(taxa_temp[nrow(taxa_temp), "original_name"], sp_counter[which(sp_counter$sp == SP2), 2])
new_SP2 <- taxa_temp[nrow(taxa_temp), 2]
# +1 for thoses species in the counter
sp_counter[which(sp_counter$sp == SP1), 2] <- sp_counter[which(sp_counter$sp == SP1), 2] + 1
sp_counter[which(sp_counter$sp == SP2), 2] <- sp_counter[which(sp_counter$sp == SP2), 2] + 1
# Change it in the inter_temp table
RN <- as.character(inter_temp[anyDuplicated(inter_temp[, c("sp_taxon_1", "sp_taxon_2")]), "REARING_NUMBER"])
for (j in 1:nrow(inter_temp)) {
if(inter_temp[j, "REARING_NUMBER"] == RN){
if(str_detect(inter_temp[j, "sp_taxon_1"], SP1)) inter_temp[j, "sp_taxon_1"] <- new_SP1
if(str_detect(inter_temp[j, "sp_taxon_2"], SP1)) inter_temp[j, "sp_taxon_2"] <- new_SP1
if(str_detect(inter_temp[j, "sp_taxon_1"], SP2)) inter_temp[j, "sp_taxon_1"] <- new_SP2
if(str_detect(inter_temp[j, "sp_taxon_2"], SP2)) inter_temp[j, "sp_taxon_2"] <- new_SP2
}
}
}
anyDuplicated(inter_temp[, c("sp_taxon_1", "sp_taxon_2")])
445-409
View(Kolpelke_2017_inter)
# Add taxon_level
Kolpelke_2017_inter[, "taxon_1_level"] <- "population"
Kolpelke_2017_inter[, "taxon_2_level"] <- "population"
V <- which(Kolpelke_2017_inter[, "attr"] == "Number of galls")
V
Kolpelke_2017_inter[V, "taxon_1_level"] <- "individual"
write.csv2(x = Kolpelke_2017_inter, file = "importation_mangal/Kolpelke_2017/data/Kolpelke_2017_inter.csv", row.names = FALSE)
srid <- 4326
attr_gall <- list(name         = "Number of galls",
table_owner = "interactions",
description = "Number of galls",
unit        = "NA")
attr_paras <- list(name       = "Number of parasited galls",
table_owner = "interactions",
description = "Number of parasited galls",
unit        = "NA")
attr_altitude <- list(name        = "Altitude of the site",
table_owner = "environments",
description = "Altitude of the site",
unit        = "meters")
attr_Endo_Ecto <- list(name       = "Endo/Ecto",
table_owner = "traits",
description = "Type of parasitism (Endoparasitisim or Ectoparasitism",
unit        = "NA")
attr_Koino_Idio <- list(name      = "Koino/Idio",
table_owner = "traits",
description = "Is the parasite Koinobiont or Idiobiont",
unit        = "NA")
attr_stage <- list(name        = "stage of the host",
table_owner = "traits",
description = "Stage of the host at time of parasitism",
unit        = "NA")
attr_type <- list(name        = "gall type",
table_owner = "traits",
description = "Type of gall done the parasite Salix",
unit        = "NA")
ref <- list(doi       = "NA",
jstor     = "NA",
pmid      = "NA",
paper_url = "null",
data_url  = "URL of the attached data",
author    = "firt author name",
year      = "NA",
bibtex    = "bibtext long format")
users <- list(name         = "name",
email        = "null",
orcid        = "null",
organization = "null",
type         = "administrator")
dataset <- list(name        = "name",
date        = "1111-11-11",
description = "Description of the dataset collected",
public      = FALSE)
trait <- list(date = "1111-11-11")
Kolpelke_2017_inter <- read.csv2("importation_mangal/Kolpelke_2017/data/Kolpelke_2017_inter.csv", header = TRUE, sep = ";")
taxa_back_df <- read.csv2("importation_mangal/Kolpelke_2017/data/Kolpelke_2017_taxa_back.csv", header = TRUE, sep = ";")
taxa_df <- read.csv2("importation_mangal/Kolpelke_2017/data/Kolpelke_2017_taxa_df.csv", header = TRUE, sep = ";")
enviro_df <- read.csv2("importation_mangal/Kolpelke_2017/data/Kolpelke_2017_enviro_df.csv", header = TRUE, sep = ";")
trait_galler <- read.csv2("importation_mangal/Kolpelke_2017/data/Kolpelke_2017_trait_galler.csv", header = TRUE, sep = ";")
trait_parasit <- read.csv2("importation_mangal/Kolpelke_2017/data/Kolpelke_2017_trait_parasit.csv", header = TRUE, sep = ";")
network_df <- read.csv2("importation_mangal/Kolpelke_2017/data/Kolpelke_2017_network_df.csv", header = TRUE, sep = ";")
#------------------------------
# POST commun table
#------------------------------
POST_attribute(attr_gall)
POST_attribute(attr_paras)
POST_attribute(attr_altitude)
POST_attribute(attr_Endo_Ecto)
POST_attribute(attr_Koino_Idio)
POST_attribute(attr_stage)
POST_attribute(attr_type)
POST_ref()
POST_user()
getwd()
setwd("mangal.package/")
devtools::load_all()
library(mangal)
POST_user()
user <- list(name         = "name",
email        = "null",
orcid        = "null",
organization = "null",
type         = "administrator")
POST_user()
POST_dataset()
POST_taxa_back()
# GET_fkey for the attribute id in the interaction table
Kolpelke_2017_inter["attr_id"] <- NA
for (i in 1:nrow(Kolpelke_2017_inter)) {
Kolpelke_2017_inter[i, "attr_id"] <- GET_fkey("attribute", c("name", "unit"), c(as.character(Kolpelke_2017_inter[i, "attr"]), NA))
}
# First loop
for (i in 1:2){#max(network_df$number)){
print("#################   New network   #################")
# Subset table to select data from i dataset
network_temp <- subset(network_df, network_df$number == i)
rearing_number <- as.vector(network_temp$REARING_NUMBER)
network_temp <- network_temp[1, ]
enviro_temp  <- subset(enviro_df, enviro_df$number == i)
# Subset table to match rearing_number of the i dataset
inter_temp     <- subset(Kolpelke_2017_inter, Kolpelke_2017_inter$REARING_NUMBER %in% rearing_number)
inter_temp$sp_taxon_1 <- as.character(inter_temp$sp_taxon_1)
inter_temp$sp_taxon_2 <- as.character(inter_temp$sp_taxon_2)
taxa_temp     <- subset(taxa_df, taxa_df$REARING_NUMBER %in% rearing_number)
taxa_temp     <- taxa_temp[!duplicated(taxa_temp[,"original_name"]),]
taxa_temp$original_name <- as.character(taxa_temp$original_name)
t_galler_temp  <- subset(subset(trait_galler, trait_galler$REARING_NUMBER %in% rearing_number), duplicated(taxa))
t_parasit_temp <- subset(trait_parasit, trait_parasit$REARING_NUMBER %in% rearing_number)
t_parasit_temp <- t_parasit_temp[!duplicated(t_parasit_temp[,c("taxa", "name")]),]
# Search for duplicate in inter_temp -> must create two different taxa
# Create counter for all species, assing number 1 to them
sp_counter <- data.frame(sp = taxa_temp[, "original_name"], num = rep(1, times = nrow(taxa_temp)))
# Loop : add a number to the species of a duplicated interaction
while(anyDuplicated(inter_temp[, c("sp_taxon_1", "sp_taxon_2")]) >= 1){
SP1 <- inter_temp[anyDuplicated(inter_temp[, c("sp_taxon_1", "sp_taxon_2")]), "sp_taxon_1"]
SP2 <- inter_temp[anyDuplicated(inter_temp[, c("sp_taxon_1", "sp_taxon_2")]), "sp_taxon_2"]
# Add the new taxa to the taxa_temp table
taxa_temp <- rbind(taxa_temp, taxa_temp[which(taxa_temp$original_name == SP1),])
taxa_temp[nrow(taxa_temp), "original_name"] <- paste(taxa_temp[nrow(taxa_temp), "original_name"], sp_counter[which(sp_counter$sp == SP1), 2])
new_SP1 <- taxa_temp[nrow(taxa_temp), 2]
taxa_temp <- rbind(taxa_temp, taxa_temp[which(taxa_temp$original_name == SP2),])
taxa_temp[nrow(taxa_temp), "original_name"] <- paste(taxa_temp[nrow(taxa_temp), "original_name"], sp_counter[which(sp_counter$sp == SP2), 2])
new_SP2 <- taxa_temp[nrow(taxa_temp), 2]
# +1 for thoses species in the counter
sp_counter[which(sp_counter$sp == SP1), 2] <- sp_counter[which(sp_counter$sp == SP1), 2] + 1
sp_counter[which(sp_counter$sp == SP2), 2] <- sp_counter[which(sp_counter$sp == SP2), 2] + 1
# Change it in the inter_temp table
RN <- as.character(inter_temp[anyDuplicated(inter_temp[, c("sp_taxon_1", "sp_taxon_2")]), "REARING_NUMBER"])
for (j in 1:nrow(inter_temp)) {
if(inter_temp[j, "REARING_NUMBER"] == RN){
if(str_detect(inter_temp[j, "sp_taxon_1"], SP1)) inter_temp[j, "sp_taxon_1"] <- new_SP1
if(str_detect(inter_temp[j, "sp_taxon_2"], SP1)) inter_temp[j, "sp_taxon_2"] <- new_SP1
if(str_detect(inter_temp[j, "sp_taxon_1"], SP2)) inter_temp[j, "sp_taxon_1"] <- new_SP2
if(str_detect(inter_temp[j, "sp_taxon_2"], SP2)) inter_temp[j, "sp_taxon_2"] <- new_SP2
}
}
}
# Set metadata
network <- list(name             = as.character(network_temp[1, 5]),
date             = as.character(network_temp[1, 7]),
lat              = network_temp[1, 3],
lon              = network_temp[1, 4],
srid             = srid,
description      = as.character(network_temp[1, 1]),
public           = TRUE,
all_interactions = FALSE)
enviro <- list(name  = as.character(enviro_temp[1, 6]),
lat   = enviro_temp[1, 1],
lon   = enviro_temp[1, 2],
srid  = srid,
date  = as.character(enviro_temp[1, 5]),
value = enviro_temp[1, 3])
inter <- list(taxon_1_level = "individual",
taxon_2_level = "population",
date          = as.character(inter_temp[1, 2]),
direction     = "directed",
method        = "Field observation",
description   = "null",
public        = TRUE,
lat           = inter_temp[1, 7],
lon           = inter_temp[1, 8],
srid          = srid)
# Inject table
print("enviro")
POST_environment(enviro, attr_altitude)
print("network")
POST_network(network, enviro = enviro)
print("taxa")
POST_taxon(taxa_temp)
print("trait galler")
POST_trait(t_galler_temp, network = network)
print("trait parasit")
POST_trait(t_parasit_temp, network = network)
print("interaction")
POST_interaction(inter_temp, enviro = enviro)
}
i = 3
# Subset table to select data from i dataset
network_temp <- subset(network_df, network_df$number == i)
rearing_number <- as.vector(network_temp$REARING_NUMBER)
network_temp <- network_temp[1, ]
enviro_temp  <- subset(enviro_df, enviro_df$number == i)
# Subset table to match rearing_number of the i dataset
inter_temp     <- subset(Kolpelke_2017_inter, Kolpelke_2017_inter$REARING_NUMBER %in% rearing_number)
inter_temp$sp_taxon_1 <- as.character(inter_temp$sp_taxon_1)
inter_temp$sp_taxon_2 <- as.character(inter_temp$sp_taxon_2)
taxa_temp     <- subset(taxa_df, taxa_df$REARING_NUMBER %in% rearing_number)
taxa_temp     <- taxa_temp[!duplicated(taxa_temp[,"original_name"]),]
taxa_temp$original_name <- as.character(taxa_temp$original_name)
t_galler_temp  <- subset(subset(trait_galler, trait_galler$REARING_NUMBER %in% rearing_number), duplicated(taxa))
t_parasit_temp <- subset(trait_parasit, trait_parasit$REARING_NUMBER %in% rearing_number)
t_parasit_temp <- t_parasit_temp[!duplicated(t_parasit_temp[,c("taxa", "name")]),]
# Create counter for all species, assing number 1 to them
sp_counter <- data.frame(sp = taxa_temp[, "original_name"], num = rep(1, times = nrow(taxa_temp)))
# Loop : add a number to the species of a duplicated interaction
while(anyDuplicated(inter_temp[, c("sp_taxon_1", "sp_taxon_2")]) >= 1){
SP1 <- inter_temp[anyDuplicated(inter_temp[, c("sp_taxon_1", "sp_taxon_2")]), "sp_taxon_1"]
SP2 <- inter_temp[anyDuplicated(inter_temp[, c("sp_taxon_1", "sp_taxon_2")]), "sp_taxon_2"]
# Add the new taxa to the taxa_temp table
taxa_temp <- rbind(taxa_temp, taxa_temp[which(taxa_temp$original_name == SP1),])
taxa_temp[nrow(taxa_temp), "original_name"] <- paste(taxa_temp[nrow(taxa_temp), "original_name"], sp_counter[which(sp_counter$sp == SP1), 2])
new_SP1 <- taxa_temp[nrow(taxa_temp), 2]
taxa_temp <- rbind(taxa_temp, taxa_temp[which(taxa_temp$original_name == SP2),])
taxa_temp[nrow(taxa_temp), "original_name"] <- paste(taxa_temp[nrow(taxa_temp), "original_name"], sp_counter[which(sp_counter$sp == SP2), 2])
new_SP2 <- taxa_temp[nrow(taxa_temp), 2]
# +1 for thoses species in the counter
sp_counter[which(sp_counter$sp == SP1), 2] <- sp_counter[which(sp_counter$sp == SP1), 2] + 1
sp_counter[which(sp_counter$sp == SP2), 2] <- sp_counter[which(sp_counter$sp == SP2), 2] + 1
# Change it in the inter_temp table
RN <- as.character(inter_temp[anyDuplicated(inter_temp[, c("sp_taxon_1", "sp_taxon_2")]), "REARING_NUMBER"])
for (j in 1:nrow(inter_temp)) {
if(inter_temp[j, "REARING_NUMBER"] == RN){
if(str_detect(inter_temp[j, "sp_taxon_1"], SP1)) inter_temp[j, "sp_taxon_1"] <- new_SP1
if(str_detect(inter_temp[j, "sp_taxon_2"], SP1)) inter_temp[j, "sp_taxon_2"] <- new_SP1
if(str_detect(inter_temp[j, "sp_taxon_1"], SP2)) inter_temp[j, "sp_taxon_1"] <- new_SP2
if(str_detect(inter_temp[j, "sp_taxon_2"], SP2)) inter_temp[j, "sp_taxon_2"] <- new_SP2
}
}
}
network <- list(name             = as.character(network_temp[1, 5]),
date             = as.character(network_temp[1, 7]),
lat              = network_temp[1, 3],
lon              = network_temp[1, 4],
srid             = srid,
description      = as.character(network_temp[1, 1]),
public           = TRUE,
all_interactions = FALSE)
enviro <- list(name  = as.character(enviro_temp[1, 6]),
lat   = enviro_temp[1, 1],
lon   = enviro_temp[1, 2],
srid  = srid,
date  = as.character(enviro_temp[1, 5]),
value = enviro_temp[1, 3])
inter <- list(taxon_1_level = "individual",
taxon_2_level = "population",
date          = as.character(inter_temp[1, 2]),
direction     = "directed",
method        = "Field observation",
description   = "null",
public        = TRUE,
lat           = inter_temp[1, 7],
lon           = inter_temp[1, 8],
srid          = srid)
# Inject table
print("enviro")
POST_environment(enviro, attr_altitude)
print("network")
POST_network(network, enviro = enviro)
print("taxa")
POST_taxon(taxa_temp)
print("trait galler")
POST_trait(t_galler_temp, network = network)
