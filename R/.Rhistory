getwd()
setwd("stage_gravel/mangal.package/")
devtools::load_all()
library(mangal)
attr_gall <- list(name         = "Number of galls",
table_owner = "interactions",
description = "Number of galls",
unit        = "NA")
#------------------------------
# POST commun table
#------------------------------
POST_attribute(attr_gall)
data <- attr_gall
# Check if the attribute already exist
server <- mangal.env$prod$server
path <- httr::modify_url(server, path = paste0(mangal.env$base, "/attribute/?name=",data[["name"]], "&unit=", data[["unit"]]))
# Change space in url by "_"
path <- gsub(" ", "%20", path)
# Attibutes_df as a json list
attribute_lst <- json_list(as.data.frame(data))
attribute_lst
path
#------------------------------
# POST commun table
#------------------------------
POST_attribute(attr_gall)
# Inject to attributes table
POST_table(attribute_lst, "attributes")
data_lst <- attribute_lst
# Inject to attributes table
POST_table(attribute_lst, "attribute")
attr_paras <- list(name       = "Number of parasited galls",
table_owner = "interactions",
description = "Number of parasited galls",
unit        = "NA")
attr_altitude <- list(name        = "Altitude of the site",
table_owner = "environment",
description = "Altitude of the site",
unit        = "meters")
attr_Endo/Ecto <- list(name       = "Endo/Ecto",
table_owner = "trait",
description = "Type of parasitism (Endoparasitisim or Ectoparasitism",
unit        = "NA")
attr_Koino/Idio <- list(name      = "Koino/Idio",
table_owner = "trait",
description = "Is the parasite Koinobiont or Idiobiont",
unit        = "NA")
attr_stage <- list(name        = "stage of the host",
table_owner = "trait",
description = "Stage of the host at time of parasitism",
unit        = "NA")
ref <- list(doi       = "NA",
jstor     = "NA",
pmid      = "NA",
paper_url = "null",
data_url  = "URL of the attached data",
author    = "firt author name",
year      = "NA",
bibtex    = "bibtext long format")
user <- list(name         = "name",
email        = "null",
orcid        = "null",
organization = "null",
type         = "administrator")
dataset <- list(name        = "name",
date        = "1111-11-11",
description = "Description of the dataset collected",
public      = FALSE)
trait <- list(date = "1111-11-11")
Kolpelke_2017_inter <- read.csv2("importation_mangal/Kolpelke_2017/data/Kolpelke_2017_inter.csv", header = TRUE, sep = ";")
taxa_back_df <- read.csv2("importation_mangal/Kolpelke_2017/data/Kolpelke_2017_taxa_back.csv", header = TRUE, sep = ";")
taxa_df <- read.csv2("importation_mangal/Kolpelke_2017/data/Kolpelke_2017_taxa_df.csv", header = TRUE, sep = ";")
enviro_df <- read.csv2("importation_mangal/Kolpelke_2017/data/Kolpelke_2017_enviro_df.csv", header = TRUE, sep = ";")
trait_galler <- read.csv2("importation_mangal/Kolpelke_2017/data/Kolpelke_2017_trait_galler.csv", header = TRUE, sep = ";")
trait_parasit <- read.csv2("importation_mangal/Kolpelke_2017/data/Kolpelke_2017_trait_parasit.csv", header = TRUE, sep = ";")
network_df <- read.csv2("importation_mangal/Kolpelke_2017/data/Kolpelke_2017_network_df.csv", header = TRUE, sep = ";")
getwd()
setwd(..)
setwd("..")
getwd()
setwd("importation_mangal/")
setwd("..")
Kolpelke_2017_inter <- read.csv2("importation_mangal/Kolpelke_2017/data/Kolpelke_2017_inter.csv", header = TRUE, sep = ";")
taxa_back_df <- read.csv2("importation_mangal/Kolpelke_2017/data/Kolpelke_2017_taxa_back.csv", header = TRUE, sep = ";")
taxa_df <- read.csv2("importation_mangal/Kolpelke_2017/data/Kolpelke_2017_taxa_df.csv", header = TRUE, sep = ";")
enviro_df <- read.csv2("importation_mangal/Kolpelke_2017/data/Kolpelke_2017_enviro_df.csv", header = TRUE, sep = ";")
trait_galler <- read.csv2("importation_mangal/Kolpelke_2017/data/Kolpelke_2017_trait_galler.csv", header = TRUE, sep = ";")
trait_parasit <- read.csv2("importation_mangal/Kolpelke_2017/data/Kolpelke_2017_trait_parasit.csv", header = TRUE, sep = ";")
network_df <- read.csv2("importation_mangal/Kolpelke_2017/data/Kolpelke_2017_network_df.csv", header = TRUE, sep = ";")
#------------------------------
# POST commun table
#------------------------------
POST_attribute(attr_gall)
POST_attribute(attr_paras)
#' @title POST data into the Mangal attributes table
#'
#' @description POST the metadata associated whit the attributes table
#'
#' @param attr A list of four levels: name, table_owner, description and unit
#'
#' @return
#'
#' The status of the injection:
#' 'attr already in mangal' means that the attribute name already have an id
#' 'attr done' an id has been created and the injection is succesfull
#'
#' @author Gabriel Bergeron
#'
#' @keywords database
#'
#' @importFrom httr modify_url
#' @importFrom httr GET
#' @importFrom httr add_headers
#'
#' @export
## Create and inject attributes table ##
POST_attribute <- function(data){
# Check if the attribute already exist
server <- mangal.env$prod$server
path <- httr::modify_url(server, path = paste0(mangal.env$base, "/attribute/?name=",data[["name"]], "&unit=", data[["unit"]]))
# Change space in url by "_"
path <- gsub(" ", "%20", path)
# Is retreived content == 0 -> in this case inject data
if (length(content(httr::GET(url = path, config = mangal.env$headers))) == 0) {
# Attibutes_df as a json list
attribute_lst <- json_list(as.data.frame(data))
# Inject to attributes table
POST_table(attribute_lst, "attribute")
print(paste0(data$name, " attribute done"))
} else {
print("attribute already in mangal")
}
}
setwd("mangal.package/R/")
devtools::load_all()
library(mangal)
POST_attribute
#------------------------------
# POST commun table
#------------------------------
POST_attribute(attr_gall)
library(httr)
# Set libraries
library(reshape2)
library(tidyr)
library(jsonlite)
library(httr)
library(data.table)
library(rcrossref)
library(taxize)
library(stringr)
library(mangal)
#------------------------------
# POST commun table
#------------------------------
POST_attribute(attr_gall)
POST_attribute(attr_paras)
POST_attribute(attr_altitude)
data <- attr_altitude
# Check if the attribute already exist
server <- mangal.env$prod$server
path <- httr::modify_url(server, path = paste0(mangal.env$base, "/attribute/?name=",data[["name"]], "&unit=", data[["unit"]]))
# Change space in url by "_"
path <- gsub(" ", "%20", path)
# Attibutes_df as a json list
attribute_lst <- json_list(as.data.frame(data))
# Inject to attributes table
POST_table(attribute_lst, "attribute")
attribute_lst
POST_attribute(attr_altitude)
attr_altitude <- list(name        = "Altitude of the site",
table_owner = "environments",
description = "Altitude of the site",
unit        = "meters")
POST_attribute(attr_altitude)
POST_attribute(attr_Ecto/Endo)
attr_Endo_Ecto <- list(name       = "Endo/Ecto",
table_owner = "trait",
description = "Type of parasitism (Endoparasitisim or Ectoparasitism",
unit        = "NA")
attr_Koino_Idio <- list(name      = "Koino/Idio",
table_owner = "trait",
description = "Is the parasite Koinobiont or Idiobiont",
unit        = "NA")
POST_attribute(attr_Ecto_Endo)
attr_Ecto_Endo
POST_attribute(attr_Endo_Ecto)
attr_Endo_Ecto <- list(name       = "Endo/Ecto",
table_owner = "traits",
description = "Type of parasitism (Endoparasitisim or Ectoparasitism",
unit        = "NA")
attr_Koino_Idio <- list(name      = "Koino/Idio",
table_owner = "traits",
description = "Is the parasite Koinobiont or Idiobiont",
unit        = "NA")
attr_stage <- list(name        = "stage of the host",
table_owner = "traits",
description = "Stage of the host at time of parasitism",
unit        = "NA")
POST_attribute(attr_Endo_Ecto)
POST_attribute(attr_Koino_Idio)
POST_attribute(attr_stage)
POST_ref()
getwd()
devtools::load_all()
devtools::load_all()
devtools::load_all()
library(mangal)
POST_ref()
POST_user()
POST_dataset()
POST_user()
POST_user
# Check if the users already exist
server <- mangal.env$prod$server
path <- httr::modify_url(server, path = paste0(mangal.env$base, "/user/?name=", user[[1]]))
# Change space in url by "_"
path <- gsub(" ", "%20", path)
length(content(httr::GET(url = path, config = mangal.env$headers))) == 0
length(content(httr::GET(url = path, config = mangal.env$headers)))
content(httr::GET(url = path, config = mangal.env$headers))
mangal.env$headers
httr::GET(url = path, config = mangal.env$headers)
path <- httr::modify_url(server, path = paste0(mangal.env$base, "/users/?name=", user[[1]]))
httr::GET(url = path, config = mangal.env$headers)
devtools
devtools::load_all()
library(mangal)
POST_user()
POST_dataset()
devtools::load_all()
library(mangal)
POST_dataset()
POST_taxa_back()
# GET_fkey for the attribute id in the interaction table
Kolpelke_2017_inter["attr_id"] <- NA
for (i in 1:nrow(Kolpelke_2017)) {
Kolpelke_2017_inter[i, "attr_id"] <- GET_fkey("attribute", c("name", "unit"), c(Kolpelke_2017_inter[i, "attr"], NA))
}
for (i in 1:nrow(Kolpelke_2017_inter)) {
Kolpelke_2017_inter[i, "attr_id"] <- GET_fkey("attribute", c("name", "unit"), c(Kolpelke_2017_inter[i, "attr"], NA))
}
for (i in 1:nrow(Kolpelke_2017_inter)) {
Kolpelke_2017_inter[i, "attr_id"] <- GET_fkey("attribute", c("name", "unit"), c(Kolpelke_2017_inter[i, "attr"], NA))
}
View(Kolpelke_2017_inter)
